{"version":3,"file":"form-submissions-a7c83038.js","sources":["../../../react-formio/src/components/table/components/defaultCell.component.tsx","../../../react-formio/src/components/table/utils/mapFormToColumns.tsx","../../../react-formio/src/utils/mapPagination.ts"],"sourcesContent":["import React from \"react\";\n\nexport function DefaultCell({ value, render = (f: any) => f }: any): JSX.Element {\n  if (value === undefined) {\n    return <span></span>;\n  }\n\n  const rendered = render(value);\n\n  if (value !== rendered) {\n    return <div dangerouslySetInnerHTML={{ __html: rendered }} />;\n  }\n\n  return <span>{String(value)}</span>;\n}\n","import { Components, ExtendedComponentSchema } from \"formiojs\";\nimport FormioUtils from \"formiojs/utils\";\nimport React from \"react\";\n\nimport { FormSchema } from \"../../../interfaces\";\nimport { DefaultCell } from \"../components/defaultCell.component\";\nimport { SelectColumnFilter } from \"../filters/selectColumnFilter.component\";\nimport { ExtendedColumn } from \"../hooks/useCustomTable.hook\";\n\nexport function mapFormToColumns(form: FormSchema): ExtendedColumn[] {\n  const columns: ExtendedColumn[] = [];\n\n  FormioUtils.eachComponent(form.components, (component: ExtendedComponentSchema) => {\n    if (component.tableView && component.key) {\n      const cmp: any = Components.create(component, {}, null, true);\n\n      const column: ExtendedColumn = {\n        Header: component.label || component.title || component.key,\n        accessor: `data.${component.key}`,\n        className: \"text-center\",\n        Cell: (props: any) => <DefaultCell {...props} render={(value: any) => cmp.asString(value)} />\n      };\n\n      if (component.type === \"select\" && component.dataSrc === \"values\") {\n        column.Filter = SelectColumnFilter;\n        (column as any).choices = component.data.values;\n      }\n\n      columns.push(column);\n    }\n  });\n\n  return columns;\n}\n","export function mapPagination({ skip, limit, serverCount, length }: any = {}): any {\n  skip = skip || 0;\n  limit = limit || 10;\n  serverCount = serverCount || length;\n\n  return {\n    pageIndex: Math.floor(skip / limit),\n    pageSize: limit,\n    pageCount: Math.ceil(serverCount / limit)\n  };\n}\n"],"names":["DefaultCell","value","render","f","rendered","jsx","mapFormToColumns","form","columns","FormioUtils","component","cmp","Components","column","props","SelectColumnFilter","mapPagination","skip","limit","serverCount","length"],"mappings":"mMAEO,SAASA,EAAY,CAAE,MAAAC,EAAO,OAAAC,EAAUC,GAAWA,GAAuB,CAC/E,GAAIF,IAAU,OACZ,SAAQ,OAAK,CAAA,CAAA,EAGT,MAAAG,EAAWF,EAAOD,CAAK,EAE7B,OAAIA,IAAUG,IACJ,MAAI,CAAA,wBAAyB,CAAE,OAAQA,CAAY,CAAA,CAAA,EAGrDC,EAAA,OAAA,CAAM,SAAO,OAAAJ,CAAK,CAAE,CAAA,CAC9B,CCLO,SAASK,EAAiBC,EAAoC,CACnE,MAAMC,EAA4B,CAAA,EAElCC,OAAAA,EAAY,cAAcF,EAAK,WAAaG,GAAuC,CAC7E,GAAAA,EAAU,WAAaA,EAAU,IAAK,CACxC,MAAMC,EAAWC,EAAAA,WAAW,OAAOF,EAAW,GAAI,KAAM,EAAI,EAEtDG,EAAyB,CAC7B,OAAQH,EAAU,OAASA,EAAU,OAASA,EAAU,IACxD,SAAU,QAAQA,EAAU,MAC5B,UAAW,cACX,KAAOI,GAAeT,EAACL,EAAa,CAAA,GAAGc,EAAO,OAASb,GAAeU,EAAI,SAASV,CAAK,CAAG,CAAA,CAAA,EAGzFS,EAAU,OAAS,UAAYA,EAAU,UAAY,WACvDG,EAAO,OAASE,EACfF,EAAe,QAAUH,EAAU,KAAK,QAG3CF,EAAQ,KAAKK,CAAM,EACrB,CACD,EAEML,CACT,CCjCgB,SAAAQ,EAAc,CAAE,KAAAC,EAAM,MAAAC,EAAO,YAAAC,EAAa,OAAAC,CAAO,EAAS,GAAS,CACjF,OAAAH,EAAOA,GAAQ,EACfC,EAAQA,GAAS,GACjBC,EAAcA,GAAeC,EAEtB,CACL,UAAW,KAAK,MAAMH,EAAOC,CAAK,EAClC,SAAUA,EACV,UAAW,KAAK,KAAKC,EAAcD,CAAK,CAAA,CAE5C"}