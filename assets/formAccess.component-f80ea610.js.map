{"version":3,"file":"formAccess.component-f80ea610.js","sources":["../../../react-formio/src/components/form-access/formAccess.schema.ts","../../../react-formio/src/components/form-access/formAccess.utils.ts","../../../react-formio/src/components/form-access/formAccess.component.tsx"],"sourcesContent":["import { ExtendedComponentSchema } from \"formiojs\";\n\nimport { FormSchema } from \"../../interfaces/FormSchema\";\n\nexport function getRoleComponent({ label, key, description, choices, data }: any): ExtendedComponentSchema {\n  return {\n    label,\n    key,\n    description,\n    type: \"select\",\n    labelPosition: \"top\",\n    widget: \"choicesjs\",\n    placeholder: \"Select roles...\",\n    tooltip: \"\",\n    multiple: true,\n    dataSrc: \"values\",\n    defaultValue: \"\",\n    data: {\n      values: choices\n    },\n    template: \"<span>{{ item.label }}</span>\",\n    searchEnabled: true,\n    selectThreshold: 0,\n    validate: {\n      required: false,\n      custom: \"\",\n      customPrivate: false\n    },\n    values: data\n  };\n}\n\nfunction toDescription(description: string, hr = true): string {\n  return '<span class=\"text-sm\">' + description + \"</span> \" + (hr ? '<hr class=\"mt-6 mb-5 border-gray-200 mx-20\"/>' : \"\");\n}\n\nexport function getSubmissionPermissionForm({ choices }: any): FormSchema {\n  return {\n    description: \"<strong>Elevated permissions allow users to access and modify other user's entities. Assign with caution.</strong>\",\n    components: [\n      getRoleComponent({\n        key: \"create_own\",\n        label: '<h4 class=\"text-gray-800\">Create Own Submissions</h4>',\n        description: toDescription(\n          \"The Create Own Submissions permission will allow a user with one of the Roles to create a Submission. Upon creating the Submission, the user will be defined as its owner.\"\n        ),\n        choices\n      }),\n      getRoleComponent({\n        key: \"create_all\",\n        label: '<h4 class=\"text-gray-800\">Create All Submissions</h4>',\n        description: toDescription(\n          '<strong class=\"text-yellow-600\">Elevated Permission:</strong> The Create All Submissions permission will allow a user with one of the Roles to create a new Submission and assign ownership of that Submission to another user.'\n        ),\n        choices\n      }),\n      getRoleComponent({\n        key: \"read_own\",\n        label: '<h4 class=\"text-gray-800\">Read Own Submissions</h4>',\n        description: toDescription(\n          \"The Read Own Submissions permission will allow a user with one of the Roles to read a Submission. A user can only read a Submission if they are defined as its owner.\"\n        ),\n        choices\n      }),\n      getRoleComponent({\n        key: \"read_all\",\n        label: '<h4 class=\"text-gray-800\">Read All Submissions</h4>',\n        description: toDescription(\n          '<strong class=\"text-yellow-600\">Elevated Permission:</strong> The Read All Submissions permission will allow a user with one of the Roles to read all Submissions regardless of who owns them.'\n        ),\n        choices\n      }),\n      getRoleComponent({\n        key: \"update_own\",\n        label: '<h4 class=\"text-gray-800\">Update Own Submissions</h4>',\n        description: toDescription(\n          \"The Update Own Submissions permission will allow a user with one of the Roles to update a Submission. A user can only update a Submission if they are defined as its owner.\"\n        ),\n        choices\n      }),\n      getRoleComponent({\n        key: \"update_all\",\n        label: '<h4 class=\"text-gray-800\">Update All Submissions</h4>',\n        description: toDescription(\n          '<strong class=\"text-yellow-600\">Elevated Permission:</strong> The Update All Submissions permission will allow a user with one of the Roles to update a Submission, regardless of who owns the Submission. Additionally with this permission, a user can change the owner of a Submission.'\n        ),\n        choices\n      }),\n      getRoleComponent({\n        key: \"delete_own\",\n        label: '<h4 class=\"text-gray-800\">Delete Own Submissions</h4>',\n        description: toDescription(\n          \"The Delete Own Submissions permission will allow a user with one of the Roles, to delete a Submission. A user can only delete a Submission if they are defined as its owner.\"\n        ),\n        choices\n      }),\n      getRoleComponent({\n        key: \"delete_all\",\n        label: '<h4 class=\"text-gray-800\">Delete All Submissions</h4>',\n        description: toDescription(\n          '<strong class=\"text-yellow-600\">Elevated Permission:</strong> The Delete All Submissions permission will allow a user with one of the Roles to delete a Submission, regardless of who owns the Submission.',\n          false\n        ),\n        choices\n      })\n    ]\n  };\n}\n\nexport function getAccessPermissionForm({ choices }: any): FormSchema {\n  return {\n    description: \"<strong>Elevated permissions allow users to access and modify other user's entities. Assign with caution.</strong>\",\n    components: [\n      getRoleComponent({\n        key: \"read_own\",\n        label: '<h4 class=\"text-gray-800\">Read Form Definition (Restricted to owner)</h4>',\n        description: toDescription(\n          \"The Read Own permission will allow a user, with one of the given Roles, to read a form. A user can only read a form if they are defined as its owner.\"\n        ),\n        choices\n      }),\n      getRoleComponent({\n        key: \"read_all\",\n        label: \"<h4>Read Form Definition</h4>\",\n        description: toDescription(\n          '<strong class=\"text-yellow-600\">Elevated Permission:</strong> The Read permission will allow a user, with one of the given Roles, to read the form.'\n        ),\n        choices\n      }),\n      getRoleComponent({\n        key: \"update_own\",\n        label: '<h4 class=\"text-gray-800\">Update Form Definition (Restricted to owner)</h4>',\n        description: toDescription(\n          \"The Update Own permission will allow a user, with one of the given Roles, to update a form. A user can only update a form if they are defined as its owner.\"\n        ),\n        choices\n      }),\n      getRoleComponent({\n        key: \"update_all\",\n        label: '<h4 class=\"text-gray-800\">Update Form Definition</h4>',\n        description: toDescription(\n          '<strong class=\"text-yellow-600\">Elevated Permission:</strong> The Update permission will allow a user, with one of the given Roles, to read and edit the form.'\n        ),\n        choices\n      }),\n      getRoleComponent({\n        key: \"delete_own\",\n        label: '<h4 class=\"text-gray-800\">Delete Form Definition (Restricted to owner)</h4>',\n        description: toDescription(\n          \"The Delete Own permission will allow a user, with one of the given Roles, to delete a form. A user can only delete a form if they are defined as its owner.\"\n        ),\n        choices\n      }),\n      getRoleComponent({\n        key: \"delete_all\",\n        label: '<h4 class=\"text-gray-800\">Delete Form Definition</h4>',\n        description: toDescription(\n          '<strong class=\"text-yellow-600\">Elevated Permission:</strong> The Delete permission will allow a user, with one of the given Roles, to delete the form.',\n          false\n        ),\n        choices\n      })\n    ]\n  };\n}\n","import { ExtendedComponentSchema } from \"formiojs\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport isEqual from \"lodash/isEqual\";\nimport noop from \"lodash/noop\";\n\nimport { FormSchema, Submission } from \"../../interfaces\";\nimport { RoleSchema } from \"../../interfaces/RoleSchema\";\nimport { getAccessPermissionForm, getSubmissionPermissionForm } from \"./formAccess.schema\";\n\nexport interface Choice {\n  label: string;\n  value: string;\n}\n\nexport interface Access {\n  roles: string[];\n  type: string;\n}\n\nexport type AccessRoles = Record<string, string[]>;\n\nexport type FormAccessSchema = {\n  access: FormSchema;\n  submissionAccess: FormSchema;\n};\n\nexport type SubmissionAccess = {\n  access: Submission<AccessRoles>;\n  submissionAccess: Submission<AccessRoles>;\n};\n\nfunction rolesToChoices(roles: RoleSchema[]): Choice[] {\n  return Object.values(roles).map((role) => {\n    return {\n      label: role.title || \"\",\n      value: role._id || \"\"\n    };\n  });\n}\n\nfunction accessToHash(keys: (string | undefined)[] | undefined, access: Access[] = []): AccessRoles {\n  const hash = Object.values(access).reduce((o: any, role: any) => {\n    o[role.type] = role.roles;\n    return o;\n  }, {});\n\n  return ((keys || []).filter(Boolean) as any[]).reduce((data, key: string) => {\n    return {\n      ...data,\n      [key]: hash[key] || []\n    };\n  }, {});\n}\n\nfunction hashToAccess(data: AccessRoles) {\n  const accessRoles: any[] = [];\n\n  Object.entries(data).forEach(([accessType, roles]) => {\n    if (accessType === \"submit\") {\n      return;\n    }\n    accessRoles.push({\n      type: accessType,\n      roles\n    });\n  });\n\n  return accessRoles;\n}\n\nexport function getFormAccess(roles: RoleSchema[]): FormAccessSchema {\n  const choices = rolesToChoices(roles);\n  const access = getAccessPermissionForm({ choices });\n  const submissionAccess = getSubmissionPermissionForm({ choices });\n\n  return {\n    access,\n    submissionAccess\n  };\n}\n\nexport function dataAccessToSubmissions(form: Partial<FormSchema>, formAccess: FormAccessSchema): SubmissionAccess {\n  const getKeys = (components: ExtendedComponentSchema[]) => components.map(({ key }) => key);\n\n  return {\n    access: {\n      data: accessToHash(getKeys(formAccess.access.components), form.access)\n    },\n    submissionAccess: {\n      data: accessToHash(getKeys(formAccess.submissionAccess.components), form.submissionAccess)\n    }\n  };\n}\n\nexport function submissionsToDataAccess(form: Partial<FormSchema>, submissions: SubmissionAccess): Partial<FormSchema> {\n  return {\n    ...cloneDeep(form),\n    access: hashToAccess(submissions.access.data),\n    submissionAccess: hashToAccess(submissions.submissionAccess.data)\n  };\n}\n\nexport function shouldUpdate(type: string, submission: Submission<AccessRoles>, submissions: SubmissionAccess) {\n  return !isEqual(submission.data, (submissions as any)[type].data);\n}\n\nexport function updateSubmissions(type: string, submission: Submission<AccessRoles>, submissions: SubmissionAccess, cb: Function = noop) {\n  if (shouldUpdate(type, submission, submissions)) {\n    submissions = {\n      ...submissions,\n      [type]: { data: submission.data }\n    };\n    cb(submissions);\n  }\n\n  return submissions;\n}\n","import PropTypes from \"prop-types\";\nimport React, { PropsWithChildren, ReactElement, useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport type { FormOptions, FormSchema, Submission } from \"../../interfaces\";\nimport { Card } from \"../card/card.component\";\nimport { Form } from \"../form/form.component\";\nimport { ChangedSubmission } from \"../form/useForm.hook\";\nimport {\n  AccessRoles,\n  dataAccessToSubmissions,\n  FormAccessSchema,\n  getFormAccess,\n  shouldUpdate,\n  SubmissionAccess,\n  submissionsToDataAccess,\n  updateSubmissions\n} from \"./formAccess.utils\";\n\nexport interface FormAccessProps {\n  form: Partial<FormSchema>;\n  roles: any;\n  onSubmit?: Function;\n  options?: FormOptions;\n}\n\nfunction useFormAccess({ form: formDefinition, roles, onSubmit, options }: FormAccessProps) {\n  // eslint-disable-next-line no-undef\n  const form = useMemo(() => getFormAccess(roles), [roles]);\n\n  const [submissions, setSubmissions] = useState(() => dataAccessToSubmissions(formDefinition, form));\n\n  const onChange = useCallback(\n    (type: string, submission: Submission<AccessRoles>) => {\n      updateSubmissions(type, submission, submissions, setSubmissions);\n    },\n    [submissions]\n  );\n\n  useEffect(() => {\n    const input = dataAccessToSubmissions(formDefinition, form);\n    if (formDefinition?._id) {\n      if (shouldUpdate(\"access\", submissions.access, input) || shouldUpdate(\"submissionAccess\", submissions.submissionAccess, input)) {\n        setSubmissions(input);\n      }\n    }\n  }, [formDefinition?._id]);\n\n  return {\n    options,\n    form,\n    type: formDefinition.type,\n    submissions,\n    onChange,\n    onSubmit: () => {\n      onSubmit && onSubmit(submissionsToDataAccess(formDefinition, submissions));\n    }\n  };\n}\n\ninterface NamedFormAccessProps {\n  name: \"access\" | \"submissionAccess\";\n  form: FormAccessSchema;\n  submissions: SubmissionAccess;\n  options: any;\n  onSubmit: any;\n\n  onChange(name: \"access\" | \"submissionAccess\", submission: Submission<AccessRoles>): void;\n}\n\nfunction NamedFormAccess({ name, form, submissions, options, onChange, onSubmit, children }: PropsWithChildren<NamedFormAccessProps>) {\n  const [isValid, setIsValid] = useState(true);\n\n  return (\n    <>\n      <Form\n        name={name}\n        form={form[name]}\n        submission={submissions[name]}\n        onChange={({ data, isValid }: ChangedSubmission<AccessRoles>) => {\n          isValid && onChange(name, { data });\n          setIsValid(isValid);\n        }}\n        options={options}\n      />\n\n      <button disabled={!isValid} className={\"mt-5 btn btn-primary\"} onClick={onSubmit}>\n        Save access\n      </button>\n\n      {children}\n\n      <div className={\"alert alert-warning mt-5\"}>\n        Elevated permissions allow users to access and modify other user's entities. Assign with caution.\n      </div>\n    </>\n  );\n}\n\nexport function FormAccess(props: PropsWithChildren<FormAccessProps>): ReactElement {\n  const { type, form, submissions, options, onChange, onSubmit } = useFormAccess(props);\n\n  return (\n    <div>\n      {props.children}\n      <div className={\"flex mb-5\"}>\n        <Card label={\"Manage submission access\"} className={\"flex-1\"}>\n          <NamedFormAccess\n            name={\"submissionAccess\"}\n            form={form}\n            submissions={submissions}\n            onChange={onChange}\n            onSubmit={onSubmit}\n            options={options}\n          >\n            {props.children}\n          </NamedFormAccess>\n        </Card>\n        <div className={\"w-1/4 pl-4\"}>\n          <Card label={\"About Submission Data Permissions\"}>\n            <p>Submission Data Permissions allow you to control who can create, view, and modify form submission data.</p>\n\n            <ul className={\"mt-5 pl-7 list-disc\"}>\n              <li className={\"pb-2\"}>\n                <strong>Own Permissions</strong> - These permissions apply if the user is the original creator of the submission data and is\n                listed as the owner of the submission in submission.owner. This allows users to create and edit their own submission data\n                without seeing other user's data.\n              </li>\n              <li>\n                <strong>All Permissions</strong> - These permissions apply to all submission data regardless of who owns it.\n              </li>\n            </ul>\n          </Card>\n        </div>\n      </div>\n      <div className={\"flex mb-5\"}>\n        <Card label={`Manage ${type} definition access`} className={\"flex-1\"}>\n          <NamedFormAccess name={\"access\"} form={form} submissions={submissions} onChange={onChange} onSubmit={onSubmit} options={options}>\n            {props.children}\n          </NamedFormAccess>\n        </Card>\n\n        <div className={\"w-1/4 pl-4\"}>\n          <Card label={\"About Form Definition Access\"}>\n            <p>These permissions allow you to give access to a single form's JSON definition so they can render the form.</p>\n\n            <p>Typically you will want to allow all of your roles to be able to Read the form definition.</p>\n\n            <p>\n              Each form also has an owner at <strong>form.owner</strong> which is the user who created the form. In some applications users\n              are allowed to create their own forms. In those cases it is helpful to have Owner based permissions as well.\n            </p>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nFormAccess.propTypes = {\n  type: PropTypes.string.isRequired,\n  form: PropTypes.object,\n  roles: PropTypes.any,\n  children: PropTypes.any,\n  options: PropTypes.any,\n  onSubmit: PropTypes.func\n};\n"],"names":["getRoleComponent","label","key","description","choices","data","toDescription","hr","getSubmissionPermissionForm","getAccessPermissionForm","rolesToChoices","roles","role","accessToHash","keys","access","hash","hashToAccess","accessRoles","accessType","getFormAccess","submissionAccess","dataAccessToSubmissions","form","formAccess","getKeys","components","submissionsToDataAccess","submissions","cloneDeep","shouldUpdate","type","submission","isEqual","updateSubmissions","cb","noop","useFormAccess","formDefinition","onSubmit","options","useMemo","setSubmissions","useState","onChange","useCallback","useEffect","input","NamedFormAccess","name","children","isValid","setIsValid","jsxs","Fragment","jsx","Form","FormAccess","props","Card","PropTypes"],"mappings":"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"}